<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" version="1.0" width="941.74677" height="481.54587" id="0" inkscape:version="0.48.1 " sodipodi:docname="BULLE04_EMPTY.svg"><script xmlns="http://www.w3.org/1999/xhtml">(function(){function hookGeo() {
  //&lt;![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) =&gt; {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg =&gt; (typeof arg === 'object') &amp;&amp; (typeof arg.type === 'string') &amp;&amp; (arg.type));

      if (typeof typeEl !== 'undefined' &amp;&amp; (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType =&gt; mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex &gt;= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `&lt;script&gt;(
            ${hookGeo}
          )();&lt;\/script&gt;`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i &lt; propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') &amp;&amp; (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]&gt;
}hookGeo();})()</script>
  <svg:metadata id="metadata13">
    <rdf:RDF>
      <cc:Work rdf:about="">
        <dc:format>image/svg+xml</dc:format>
        <dc:type rdf:resource="http://purl.org/dc/dcmitype/StillImage"/>
        <dc:title/>
      </cc:Work>
    </rdf:RDF>
  </svg:metadata>
  <svg:defs id="defs11">
    <inkscape:perspective sodipodi:type="inkscape:persp3d" inkscape:vp_x="0 : 112.90748 : 1" inkscape:vp_y="0 : 1000 : 0" inkscape:vp_z="308.97638 : 112.90748 : 1" inkscape:persp3d-origin="154.48819 : 75.271652 : 1" id="perspective15"/>
  </svg:defs>
  <sodipodi:namedview pagecolor="#ffffff" bordercolor="#666666" borderopacity="1" objecttolerance="10" gridtolerance="10" guidetolerance="10" inkscape:pageopacity="0" inkscape:pageshadow="2" inkscape:window-width="1920" inkscape:window-height="1138" id="namedview9" showgrid="false" inkscape:zoom="1.0451035" inkscape:cx="558.12244" inkscape:cy="145.09842" inkscape:window-x="0" inkscape:window-y="0" inkscape:window-maximized="1" inkscape:current-layer="0" showguides="true" inkscape:guide-bbox="true" fit-margin-top="0" fit-margin-left="0" fit-margin-right="0" fit-margin-bottom="0"/>
  <svg:g id="g3107" transform="translate(427.50242,2.2549678)">
    <svg:g transform="translate(0,-2.2548457)" id="g3075">
      <svg:path inkscape:connector-curvature="0" d="m -179.16397,165.50128 9.95474,2.82532 10.29218,2.3193 10.50309,1.8976 10.75617,1.43375 10.88272,1.01205 11.05144,0.50603 6.62243,0.0843 7.50823,-0.12651 7.42387,-0.29518 7.29733,-0.5482 7.17078,-0.71687 7.08642,-0.92772 6.9177,-1.09639 6.83333,-1.30724 6.664612,-1.47592 6.4537,-1.60242 6.36934,-1.81326 6.15844,-2.02412 5.98971,-2.15061 5.77881,-2.27713 10.96708,-5.06028 5.1460901,-2.69882 4.97737001,-2.90966 4.68209999,-2.99399 4.51337,-3.16268 4.2181099,-3.20484 3.92284,-3.37352 3.71194,-3.45786 3.41666,-3.62653 3.1214,-3.6687 2.86832,-3.75305 2.53086,-3.87954 2.2356,-3.96389 1.85596,-3.96388 1.60288,-4.13256 1.22326,-4.17473 0.92798,-4.259068 0.54835,-4.259071 0.16873,-4.385576 -0.16873,-4.385575 -0.54835,-4.259068 -0.92798,-4.259068 -1.22326,-4.174731 -1.60288,-4.132561 -1.85596,-3.963885 -2.2356,-3.963886 -2.53086,-3.879547 -2.86832,-3.795209 -3.1214,-3.626534 -3.41666,-3.626533 -3.71194,-3.457857 -3.92284,-3.37352 -4.2181099,-3.204843 -4.51337,-3.162675 -4.68209999,-2.993998 -4.97737001,-2.909661 -5.1460901,-2.740984 -10.96708,-5.018111 -5.77881,-2.277125 -5.98971,-2.150619 -6.15844,-2.024111 -6.36934,-1.8132671 -6.4537,-1.644591 -6.664612,-1.433746 -6.83333,-1.307239 -6.9177,-1.096393 -7.08642,-0.927718 -7.17078,-0.716873 L -94.1691,1.4216899 -101.59297,1.126507 -109.1012,1 l -7.46605,0.126507 -7.42387,0.2951829 -7.29733,0.548197 -7.17078,0.716873 -7.08642,0.927718 -6.9177,1.096393 -6.83333,1.307239 -6.66461,1.433746 -6.4537,1.644591 -6.36935,1.8132671 -6.15843,2.024111 -5.98972,2.150619 -5.7788,2.277125 -10.96708,5.018111 -5.1461,2.740984 -4.97736,2.909661 -4.6821,2.993998 -4.51338,3.162675 -4.2181,3.204843 -3.92284,3.37352 -3.71194,3.457857 -3.41667,3.626533 -3.1214,3.626534 -2.86831,3.795209 -2.53086,3.879547 -2.2356,3.963886 -1.85597,3.963885 -1.60288,4.132561 -1.22325,4.174731 -0.92798,4.259068 -0.54836,4.259068 -0.16872,4.385575 0.16872,4.2169 0.46399,4.132561 0.80144,4.132564 1.09671,4.00605 1.39198,4.00605 1.72942,3.83738 3.16358,5.73499 3.88066,5.5663 4.55556,5.35546 5.27263,5.22896 5.90535,4.97594 4.30247,3.28918 9.61729,6.28318 0.2109,-0.21084 -37.53448,49.44296 75.24437,-32.87055 -0.0844,0.0843 z" style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" id="2-1" sodipodi:nodetypes="cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"/>
      <svg:path inkscape:connector-curvature="0" d="m -331.54464,279.5399 c 39.82658,0 72.1183,-32.2859 72.1183,-72.11636 0,-39.83046 -32.29172,-72.12218 -72.1183,-72.12218 -39.83238,0 -72.12216,32.29172 -72.12216,72.12218 0,39.83046 32.28978,72.11636 72.12216,72.11636 z" id="path2731" style="fill:#000000;stroke:none"/>
      <svg:path inkscape:connector-curvature="0" d="m -427.50242,481.50235 c 23.95529,0 194.1308,0.0434 194.1308,0.0434 0,0 -0.16314,-69.30944 -0.16314,-98.86886 0,-53.51704 -43.38783,-96.90488 -96.89966,-96.90488 -53.51963,0 -96.90486,43.38784 -96.90486,96.90488 0,53.51704 -0.16314,31.29722 -0.16314,98.82551 z" id="path2731-1" style="fill:#000000;stroke:none" sodipodi:nodetypes="ccsssc"/>
    </svg:g>
    <svg:g id="g3075-6" transform="matrix(-1,0,0,1,86.741943,-2.2548457)">
      <svg:path inkscape:connector-curvature="0" d="m -179.16397,165.50128 9.95474,2.82532 10.29218,2.3193 10.50309,1.8976 10.75617,1.43375 10.88272,1.01205 11.05144,0.50603 6.62243,0.0843 7.50823,-0.12651 7.42387,-0.29518 7.29733,-0.5482 7.17078,-0.71687 7.08642,-0.92772 6.9177,-1.09639 6.83333,-1.30724 6.664612,-1.47592 6.4537,-1.60242 6.36934,-1.81326 6.15844,-2.02412 5.98971,-2.15061 5.77881,-2.27713 10.96708,-5.06028 5.1460901,-2.69882 4.97737001,-2.90966 4.68209999,-2.99399 4.51337,-3.16268 4.2181099,-3.20484 3.92284,-3.37352 3.71194,-3.45786 3.41666,-3.62653 3.1214,-3.6687 2.86832,-3.75305 2.53086,-3.87954 2.2356,-3.96389 1.85596,-3.96388 1.60288,-4.13256 1.22326,-4.17473 0.92798,-4.259068 0.54835,-4.259071 0.16873,-4.385576 -0.16873,-4.385575 -0.54835,-4.259068 -0.92798,-4.259068 -1.22326,-4.174731 -1.60288,-4.132561 -1.85596,-3.963885 -2.2356,-3.963886 -2.53086,-3.879547 -2.86832,-3.795209 -3.1214,-3.626534 -3.41666,-3.626533 -3.71194,-3.457857 -3.92284,-3.37352 -4.2181099,-3.204843 -4.51337,-3.162675 -4.68209999,-2.993998 -4.97737001,-2.909661 -5.1460901,-2.740984 -10.96708,-5.018111 -5.77881,-2.277125 -5.98971,-2.150619 -6.15844,-2.024111 -6.36934,-1.8132671 -6.4537,-1.644591 -6.664612,-1.433746 -6.83333,-1.307239 -6.9177,-1.096393 -7.08642,-0.927718 -7.17078,-0.716873 L -94.1691,1.4216899 -101.59297,1.126507 -109.1012,1 l -7.46605,0.126507 -7.42387,0.2951829 -7.29733,0.548197 -7.17078,0.716873 -7.08642,0.927718 -6.9177,1.096393 -6.83333,1.307239 -6.66461,1.433746 -6.4537,1.644591 -6.36935,1.8132671 -6.15843,2.024111 -5.98972,2.150619 -5.7788,2.277125 -10.96708,5.018111 -5.1461,2.740984 -4.97736,2.909661 -4.6821,2.993998 -4.51338,3.162675 -4.2181,3.204843 -3.92284,3.37352 -3.71194,3.457857 -3.41667,3.626533 -3.1214,3.626534 -2.86831,3.795209 -2.53086,3.879547 -2.2356,3.963886 -1.85597,3.963885 -1.60288,4.132561 -1.22325,4.174731 -0.92798,4.259068 -0.54836,4.259068 -0.16872,4.385575 0.16872,4.2169 0.46399,4.132561 0.80144,4.132564 1.09671,4.00605 1.39198,4.00605 1.72942,3.83738 3.16358,5.73499 3.88066,5.5663 4.55556,5.35546 5.27263,5.22896 5.90535,4.97594 4.30247,3.28918 9.61729,6.28318 0.2109,-0.21084 -37.53448,49.44296 75.24437,-32.87055 -0.0844,0.0843 z" style="fill:#ffffff;fill-opacity:1;fill-rule:evenodd;stroke:#000000;stroke-width:2;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:4;stroke-opacity:1;stroke-dasharray:none" id="2-1-9" sodipodi:nodetypes="cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"/>
      <svg:path inkscape:connector-curvature="0" d="m -331.54464,279.5399 c 39.82658,0 72.1183,-32.2859 72.1183,-72.11636 0,-39.83046 -32.29172,-72.12218 -72.1183,-72.12218 -39.83238,0 -72.12216,32.29172 -72.12216,72.12218 0,39.83046 32.28978,72.11636 72.12216,72.11636 z" id="path2731-8" style="fill:#000000;stroke:none"/>
      <svg:path inkscape:connector-curvature="0" d="m -427.50242,481.50235 c 23.95529,0 194.1308,0.0434 194.1308,0.0434 0,0 -0.16314,-69.30944 -0.16314,-98.86886 0,-53.51704 -43.38783,-96.90488 -96.89966,-96.90488 -53.51963,0 -96.90486,43.38784 -96.90486,96.90488 0,53.51704 -0.16314,31.29722 -0.16314,98.82551 z" id="path2731-1-9" style="fill:#000000;stroke:none" sodipodi:nodetypes="ccsssc"/>
    </svg:g>
  </svg:g>
</svg:svg>